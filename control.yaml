## AHL
---
- name: Setup control nodes to run Ansible playbooks (as root).
  become: yes
  gather_facts: yes

  hosts: control_nodes

  tasks:
    - name: Get the Kubernetes apt GPG key.
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Get the Kubernetes apt repository.
      ansible.builtin.apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install kubectl.
      ansible.builtin.apt:
        pkg:
          - kubectl
        state: latest
        update_cache: true

    - name: Install required Python modules.
      ansible.builtin.pip:
        name: 
          - kubernetes
          - jmespath

    - name: Mount Ansible inventory and keys.
      ansible.posix.mount:
        src: "{{ ahl_control_mount.src }}"
        path: "{{ ahl_control_mount.path }}"
        opts: "{{ ahl_control_mount.options | default('ro') }}"
        state: "{{ ahl_control_mount.state | default('mounted') }}"
        fstype: "{{ ahl_control_mount.type | default('nfs') }}"

    - name: Install private key for the control user.
      ansible.builtin.copy:
        src: "{{ ahl_control_private_key.src }}"
        dest: "{{ ahl_control_private_key.dest }}"
        remote_src: yes
        owner: "{{ control_user }}"
        group: "{{ control_user }}"
        mode: '0600'

- name: Setup control nodes to run Ansible playbooks (as control user).
  become: no
  gather_facts: yes

  hosts: control_nodes
  
  tasks:
    - name: Create a local directoty for kube config.
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory

    - name: Fetch kube config from master node.
      ansible.builtin.fetch:
        src: /root/.kube/config
        dest: "{{ ansible_env.HOME }}/.kube/config"
        flat: yes
        owner: "{{ control_user }}"
        group: "{{ control_user }}"
      become: yes
      delegate_to: "{{ groups['k3s_nodes_master'][0] }}"

    - name: Create an Ansibile config file.
      ansible.builtin.template:
        src: ansible.cfg.j2
        dest: "{{ ansible_env.HOME }}/.ansible.cfg"

    - name: Install Ansible.
      ansible.builtin.pip:
        name: ansible
        extra_args: --user

    - name: Add host keys for all managed nodes to known hosts.
      ansible.builtin.known_hosts:
        name: "{{ hostvars[item].ansible_host }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }},`dig +short {{ hostvars[item].ansible_host }}`') }}"
      with_items: "{{ groups['managed_nodes'] }}"
