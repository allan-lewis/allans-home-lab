---
- import_role:
    name: docker_getent

- name: Create Docker volume(s)
  ansible.builtin.file:
    path: "{{ syncthing_config_volume }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"

- name: Deploy Portainer Agent container
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "portainer_agent"
    image: "portainer/agent"
    state: "started"
    recreate: "yes"
    pull: "yes"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ portainer_agent_port }}:9001/tcp"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes

- name: Deploy Docker Socket Proxy container
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "docker_proxy"
    image: "ghcr.io/tecnativa/docker-socket-proxy:latest"
    state: "started"
    recreate: "yes"
    pull: "yes"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ docker_proxy_port }}:2375/tcp"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro 
    env:
      CONTAINERS: "1 | int"
      POST: "0 | int" 

- name: Deploy Syncthing container
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "syncthing"
    image: "lscr.io/linuxserver/syncthing:latest"
    state: "started"
    recreate: "yes"
    pull: "yes"
    restart_policy: "unless-stopped"
    network_mode: "host"
    volumes: "{{ syncthing_volumes }}"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"

- name: Deploy cAdvisor container (x64)
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "cadvisor"
    image: "gcr.io/cadvisor/cadvisor:latest"
    state: "started"
    recreate: "yes"
    pull: "yes"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ ports.cadvisorPort }}:8080/tcp"
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  when: ansible_architecture == 'x86_64'

- name: Deploy cAdvisor container (ARM)
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "cadvisor"
    image: "gcr.io/cadvisor/cadvisor-arm:v0.45.0"
    state: "started"
    recreate: "yes"
    pull: "yes"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ ports.cadvisorPort }}:8080/tcp"
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  when: ansible_architecture == 'armv7l'

- name: Deploy Prometheus Node Exporter container
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "node-exporter"
    image: "quay.io/prometheus/node-exporter:latest"
    state: "started"
    recreate: "yes"
    pull: "yes"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ ports.prometheusNodeExporterPort }}:9100/tcp"
    volumes: 
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
