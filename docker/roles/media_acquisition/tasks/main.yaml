## AHL
---
- import_role: 
    name: docker_getent

- name: Create Docker volumes.
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  with_items:
      - path: "{{ movies_volume }}"
      - path: "{{ shows_volume }}"
      - path: "{{ music_volume }}"
      - path: "{{ books_volume }}"
      - path: "{{ jackett.config }}"
      - path: "{{ radarr.config }}"
      - path: "{{ readarr.config }}"
      - path: "{{ sonarr.config }}"
      - path: "{{ transmission.config }}"
      - path: "{{ lidarr.config }}"
      - path: "{{ jackett.downloads }}"
      - path: "{{ torrent_downloads }}"
      - path: "{{ torrent_watch }}"

- name: Install the Readarr Docker container.
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "readarr"
    image: "lscr.io/linuxserver/readarr:develop"
    state: "{{ readarr_state }}"
    recreate: "yes"
    pull: "always"
    restart_policy: "unless-stopped"
    published_ports:
      - "{{ readarr.port | default(8787) }}:8787/tcp"
    volumes: 
      - "{{ readarr.config }}:/config"
      - "{{ books_volume }}:/books"
      - "{{ torrent_downloads }}:/downloads"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"

- name: Install the Lidarr Docker container.
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "lidarr"
    image: "lscr.io/linuxserver/lidarr:latest"
    state: "{{ lidarr_state }}"
    recreate: "yes"
    pull: "always"
    restart_policy: "unless-stopped"
    published_ports:
      - "{{ lidarr.port | default(8686) }}:8686/tcp"
    volumes: 
      - "{{ lidarr.config }}:/config"
      - "{{ music_volume }}:/music"
      - "{{ torrent_downloads }}:/downloads"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"

- name: Install the Jackett Docker container.
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "jackett"
    image: "lscr.io/linuxserver/jackett:latest"
    state: "{{ jackett_state }}"
    recreate: "yes"
    pull: "always"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ jackett.port }}:9117/tcp"
    volumes: 
      - "{{ jackett.config }}:/config"
      - "{{ jackett.downloads }}:/downloads"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"

- name: Install the Sonarr Docker container.
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "sonarr"
    image: "lscr.io/linuxserver/sonarr:latest"
    state: "{{ sonarr_state }}"
    recreate: "yes"
    pull: "always"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ sonarr.port }}:8989/tcp"
    volumes: 
      - "{{ sonarr.config }}:/config"
      - "{{ shows_volume }}:/tv"
      - "{{ torrent_downloads }}:/downloads"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"

- name: Install the Radarr Docker container.
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "radarr"
    image: "lscr.io/linuxserver/radarr:latest"
    state: "{{ radarr_state }}"
    recreate: "yes"
    pull: "always"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ radarr.port }}:7878/tcp"
    volumes: 
      - "{{ radarr.config }}:/config"
      - "{{ movies_volume }}:/movies"
      - "{{ torrent_downloads }}:/downloads"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"

- name: Install the Transmission Docker container.
  community.docker.docker_container:
    container_default_behavior: no_defaults
    detach: yes
    name: "transmission"
    image: "lscr.io/linuxserver/transmission:latest"
    state: "{{ transmission_state }}"
    recreate: "yes"
    pull: "always"
    restart_policy: "unless-stopped"
    published_ports: 
      - "{{ transmission.port }}:9091/tcp"
      - 51413:51413/tcp
      - 51413:51413/udp
    volumes: 
        - "{{ transmission.config }}:/config"
        - "{{ torrent_downloads }}:/downloads"
        - "{{ torrent_watch }}:/watch"
    env: 
      TZ: America/New_York
      PUID: "{{ ahl_user_uid }}"
      PGID: "{{ ahl_user_gid }}"
