---
- hosts: homeassistant_nodes
  become: yes
  gather_facts: false

  vars:
    homeassistant_volume: "{{ docker_volumes_directory }}/homeassistant"

  roles:
    - role: util_getent

  tasks:
    - name: Create config volume
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner | default(docker_volumes_owner) }}"
        group: "{{ item.group | default(docker_volumes_group) }}"
      with_items: 
        - path: "{{ homeassistant_volume }}"

    - name: Setup Homeassistant
      community.docker.docker_container:
        container_default_behavior: no_defaults
        detach: yes
        name: "homeassistant"
        image: "lscr.io/linuxserver/homeassistant"
        state: "started"
        recreate: "yes"
        pull: "yes"
        restart_policy: "unless-stopped"
        network_mode: host
        volumes: 
          - "{{ homeassistant_volume }}:/config"
        env: 
          TZ: America/New_York
          PUID: "{{ control_uid }}"
          PGID: "{{ control_gid }}"

    - name: Creating HTTP reverse proxy YAML
      ansible.builtin.template:
        src: http.yaml.j2
        dest: "{{ homeassistant_volume }}/http.yaml"
        owner: "{{ control_user }}"
        group: "{{ control_user }}"
        mode: 0644
      register: homeass_http

    - name: Waiting for the main configuration YAML
      ansible.builtin.wait_for:
        path: "{{ homeassistant_volume }}/configuration.yaml"
        timeout: 60

    - name: Updating main configuration YAML
      ansible.builtin.lineinfile:
        dest: "{{ homeassistant_volume }}/configuration.yaml"
        line: 'http: !include http.yaml'
      register: homeass_conf

    - name: Restarting to pick up config changes, if necessary
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: homeassistant
        state: started
        restart: yes
      when: (homeass_http is changed) or (homeass_conf is changed)
