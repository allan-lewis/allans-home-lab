## AHL
---
- name: Create a directory for log files.
  ansible.builtin.file:
    path: "{{ ahl_backup_log_dir }}"
    state: directory

- name: Ensure that the log file exists.
  ansible.builtin.file:
    path: "{{ ahl_backup_log_file }}"
    state: touch

- name: Create a directory for the backup script.
  ansible.builtin.file:
    path: "{{ ahl_backup_script_dir }}"
    state: directory

- name: Create the backup script.
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0755
  with_items:
    - src: "backup.sh.j2"
      dest: "{{ ahl_backup_script }}"

- name: Schedule backups via a CRON job.
  ansible.builtin.cron:
    name: ahl_backup
    minute: "{{ ahl_backup_minute | default('*') }}"
    hour: "{{ ahl_backup_hour | default('*') }}"
    job: "/bin/sh {{ ahl_backup_script }}  >> {{ ahl_backup_log_file }} 2>&1"

- name: Schedule log rotation.
  ansible.builtin.template:
    src: "logrotate.j2"
    dest: "/etc/logrotate.d/allans-home-lab-backup"
  register: logrotate_updated

- name: Restart the logrotate service.
  ansible.builtin.systemd:
    state: restarted
    enabled: true
    daemon_reload: true
    name: logrotate
  when: logrotate_updated is changed
