## AHL
---
- name: Download cert-manager CRDs.
  ansible.builtin.get_url:
    url: "https://github.com/cert-manager/cert-manager/releases/download/{{ homelab_versions.k8s_cert_manager }}/cert-manager.crds.yaml"
    dest: /tmp/cert-manager.crds.yaml
    mode: '0664'

- name: Install cert-manager CRDs.
  kubernetes.core.k8s:
    state: "{{ homelab_k8s_state }}"
    src: /tmp/cert-manager.crds.yaml

- ansible.builtin.include_role:
    name: k8s_generic_helm
  vars:
    homelab_k8s_helm_value_files:
      - src: "homelab-k8s-helm-cert-manager.yaml.j2"
        dest: "{{ homelab_k8s_cert_manager_helm_values_file | default('/tmp/cert-manager-values.yaml') }}"

- name: Install LetsEncrypt certificate issuers.
  kubernetes.core.k8s:
    state: "{{ homelab_k8s_state }}"
    template: "{{ item }}"
  with_items: "{{ homelab_k8s_cert_manager_cert_issuers }}"

- name: Install Cloudflare token secret.
  kubernetes.core.k8s:
    state:  "{{ homelab_k8s_state }}"
    template: k8s-cert-manager-cloudflare-secret.yaml.j2

- name: Request certificates.
  kubernetes.core.k8s:
    template: k8s-cert-manager-certificate.yaml.j2
  vars:
    certificate_name: "{{ item.certificate_name }}"
    secret_name: "{{ item.secret_name }}"
    issuer_name: "{{ item.issuer_name }}"
  with_items: "{{ homelab_k8s_cert_manager_certificates | default([]) }}"

- name: Wait for certificates to be issued.
  ansible.builtin.shell: kubectl -n default wait --for=condition=Ready certificate {{ item.certificate_name }} --timeout=10s
  register: cert_ready
  until: cert_ready.rc == 0
  retries: 60
  delay: 30
  with_items: "{{ homelab_k8s_cert_manager_certificates }}"
