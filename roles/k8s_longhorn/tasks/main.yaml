## AHL
---
- name: Add the Longhorn Helm respository.
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: https://charts.longhorn.io
    repo_state: present 

- name: Create a namespace for Longhorn.
  kubernetes.core.k8s:
    template: homelab-k8s-namespace.yaml.j2

- name: Label namespace with appropriate privileges.
  ansible.builtin.shell: kubectl label namespace {{ homelab_k8s_namespace }} pod-security.kubernetes.io/enforce=privileged
  changed_when: true

- name: Create a secret for AWS credentials.
  kubernetes.core.k8s:
    state: "{{ homelab_k8s_state }}"
    template: k8s-longhorn-aws-secret.yml.j2

- name: Install the Longhorn Helm chart.
  kubernetes.core.helm:
    chart_ref: longhorn/longhorn
    chart_version: "{{ homelab_versions.k8s_longhorn }}"
    namespace: "{{ homelab_k8s_namespace }}"
    name: longhorn
    update_repo_cache: true
    release_state:  "{{ homelab_k8s_state }}"

- name: Create a Traefik ingress for Longhorn.
  kubernetes.core.k8s:
    state: "{{ homelab_k8s_state }}"
    template: homelab-k8s-traefik-ingress-route.yaml.j2
  vars:
    homelab_k8s_traefik_routes: "{{ homelab_k8s_longhorn_routes }}"

- name: Ensure that namespaces exist for PVCs.
  kubernetes.core.k8s:
    template: homelab-k8s-namespace.yaml.j2
  vars:
    homelab_k8s_namespace: "{{ item.namespace }}"
  with_items: "{{ homelab_k8s_longhorn_pvcs }}"

- name: Wait for all PVCs to be bound.
  ansible.builtin.shell: kubectl -n {{item.namespace}} wait --for=jsonpath='{.status.phase}'=Bound pvc/{{ item.name }} --timeout=60s
  register: pvc_bound
  until: pvc_bound.rc == 0
  retries: 500
  delay: 10
  with_items: "{{ homelab_k8s_longhorn_pvcs }}"
