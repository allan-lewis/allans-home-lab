## AHL
---
- name: Create a temporary directory for k8s manifests.
  ansible.builtin.file:
    path: "{{ homelab_k8s_metallb_tmp }}"
    state: directory

- name: Download the MetalLB manifest.
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/metallb/metallb/{{ homelab_versions.k8s_metallb }}/config/manifests/metallb-native.yaml"
    dest: "{{ homelab_k8s_metallb_tmp }}/metallb.yaml"
    mode: '0664'

- name: Ignore load balancer exclusion for control nodes.
  ansible.builtin.lineinfile:
    dest: "{{ homelab_k8s_metallb_tmp }}/metallb.yaml"
    insertafter: '        - --port=7472'
    line: "        - --ignore-exclude-lb=true"
    state: present

- name: Install MetalLB.
  kubernetes.core.k8s:
    state: "{{ homelab_k8s_state }}"
    src: "{{ homelab_k8s_metallb_tmp }}/metallb.yaml"

- name: Write config file for MetalLB.
  ansible.builtin.template:
    src: "k8s-metallb-config.yaml.j2"
    dest: "{{ homelab_k8s_metallb_tmp }}/config.yaml"

- name: Wait for MetalLB resources.
  command: >-
    kubectl wait {{ item.resource }}
    --namespace='metallb-system'
    {% if item.name | default(False) -%}{{ item.name }}{%- endif %}
    {% if item.selector | default(False) -%}--selector='{{ item.selector }}'{%- endif %}
    {% if item.condition | default(False) -%}{{ item.condition }}{%- endif %}
    --timeout='120s'
  changed_when: false
  run_once: true
  with_items:
    - description: controller
      resource: deployment
      name: controller
      condition: --for condition=Available=True
    - description: webhook service
      resource: pod
      selector: component=controller
      condition: --for=jsonpath='{.status.phase}'=Running
    - description: pods in replica sets
      resource: pod
      selector: component=controller,app=metallb
      condition: --for condition=Ready
    - description: ready replicas of controller
      resource: replicaset
      selector: component=controller,app=metallb
      condition: --for=jsonpath='{.status.readyReplicas}'=1
    - description: fully labeled replicas of controller
      resource: replicaset
      selector: component=controller,app=metallb
      condition: --for=jsonpath='{.status.fullyLabeledReplicas}'=1
    - description: available replicas of controller
      resource: replicaset
      selector: component=controller,app=metallb
      condition: --for=jsonpath='{.status.availableReplicas}'=1
  loop_control:
    label: "{{ item.description }}"

- name: Configure MetalLB.
  kubernetes.core.k8s:
    state: "{{ homelab_k8s_state }}"
    src: "{{ homelab_k8s_metallb_tmp }}/config.yaml"
